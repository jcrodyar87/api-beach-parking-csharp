// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api_beach_parking_csharp.Datos;

#nullable disable

namespace api_beach_parking_csharp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230503015934_AddInitialData")]
    partial class AddInitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("api_beach_parking_csharp.Models.Car", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("creation_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("seats_quantity")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_date")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("cars");

                    b.HasData(
                        new
                        {
                            id = 1,
                            code = "REF-717",
                            color = "azul",
                            creation_date = new DateTime(2023, 5, 2, 20, 59, 34, 634, DateTimeKind.Local).AddTicks(1879),
                            model = "Wolkswagen",
                            name = "Wolkswagen Gol Azul",
                            seats_quantity = 5,
                            status = 1,
                            updated_date = new DateTime(2023, 5, 2, 20, 59, 34, 634, DateTimeKind.Local).AddTicks(1881)
                        },
                        new
                        {
                            id = 2,
                            code = "A1A-123",
                            color = "rojo",
                            creation_date = new DateTime(2023, 5, 2, 20, 59, 34, 634, DateTimeKind.Local).AddTicks(1883),
                            model = "Nissan",
                            name = "Nissan 2023",
                            seats_quantity = 5,
                            status = 1,
                            updated_date = new DateTime(2023, 5, 2, 20, 59, 34, 634, DateTimeKind.Local).AddTicks(1884)
                        });
                });

            modelBuilder.Entity("api_beach_parking_csharp.Models.Client", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("creation_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_date")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("clients");

                    b.HasData(
                        new
                        {
                            id = 1,
                            creation_date = new DateTime(2023, 5, 2, 20, 59, 34, 634, DateTimeKind.Local).AddTicks(1668),
                            email = "jcry87@gmail.com",
                            first_name = "Juan",
                            last_name = "Rodriguez",
                            phone = "999999999",
                            status = 1,
                            updated_date = new DateTime(2023, 5, 2, 20, 59, 34, 634, DateTimeKind.Local).AddTicks(1680)
                        },
                        new
                        {
                            id = 2,
                            creation_date = new DateTime(2023, 5, 2, 20, 59, 34, 634, DateTimeKind.Local).AddTicks(1683),
                            email = "jcry1987@gmail.com",
                            first_name = "Carlos",
                            last_name = "Rodriguez",
                            phone = "909999999",
                            status = 1,
                            updated_date = new DateTime(2023, 5, 2, 20, 59, 34, 634, DateTimeKind.Local).AddTicks(1684)
                        });
                });

            modelBuilder.Entity("api_beach_parking_csharp.Models.Place", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("car_id")
                        .HasColumnType("int");

                    b.Property<int>("client_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("creation_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("parking_date")
                        .HasColumnType("datetime2");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_date")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("places");
                });
#pragma warning restore 612, 618
        }
    }
}
